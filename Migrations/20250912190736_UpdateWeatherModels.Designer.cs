// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherMap.Data;

#nullable disable

namespace WeatherMap.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250912190736_UpdateWeatherModels")]
    partial class UpdateWeatherModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WeatherMap.Models.DailyForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ForecastDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PrecipitationProbability")
                        .HasColumnType("int");

                    b.Property<double>("PrecipitationSum")
                        .HasColumnType("double");

                    b.Property<double>("TemperatureMax")
                        .HasColumnType("double");

                    b.Property<double>("TemperatureMin")
                        .HasColumnType("double");

                    b.Property<string>("WeatherDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("WeatherHistoryId")
                        .HasColumnType("int");

                    b.Property<double>("WindSpeedMax")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("WeatherHistoryId");

                    b.ToTable("DailyForecasts");
                });

            modelBuilder.Entity("WeatherMap.Models.WeatherHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrentCloudCover")
                        .HasColumnType("int");

                    b.Property<double>("CurrentFeelsLike")
                        .HasColumnType("double");

                    b.Property<int>("CurrentHumidity")
                        .HasColumnType("int");

                    b.Property<bool>("CurrentIsDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("CurrentPrecipitation")
                        .HasColumnType("double");

                    b.Property<double>("CurrentPressure")
                        .HasColumnType("double");

                    b.Property<double>("CurrentTemperature")
                        .HasColumnType("double");

                    b.Property<DateTime>("CurrentTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrentWeatherDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("CurrentWindDirection")
                        .HasColumnType("double");

                    b.Property<double>("CurrentWindSpeed")
                        .HasColumnType("double");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<DateTime>("RetrievedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("WeatherHistories");
                });

            modelBuilder.Entity("WeatherMap.Models.DailyForecast", b =>
                {
                    b.HasOne("WeatherMap.Models.WeatherHistory", "WeatherHistory")
                        .WithMany("DailyForecasts")
                        .HasForeignKey("WeatherHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeatherHistory");
                });

            modelBuilder.Entity("WeatherMap.Models.WeatherHistory", b =>
                {
                    b.Navigation("DailyForecasts");
                });
#pragma warning restore 612, 618
        }
    }
}
